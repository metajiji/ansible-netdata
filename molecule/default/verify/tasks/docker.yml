---

- name: Deploy docker-compose.yml
  register: _containers
  check_mode: true
  community.docker.docker_compose:
    state: present
    project_src: "{{ netdata_docker_dir }}"
  vars:
    ansible_python_interpreter: "{{ netdata_docker_venv_dir }}/bin/python"

- name: Check container {{ item }} is ready on host {{ inventory_hostname }}
  register: _docker_container
  ignore_errors: "{{ ansible_check_mode }}"
  community.docker.docker_container_info:
    name: "{{ item }}"
  until:
    (
      (_container.State.Health.Status is not defined
        and _container_type != 'init'
        and _container.State.Status == 'running')
      or
      (_container.State.Health.Status is defined
        and _container.State.Health.Status == 'healthy')
    ) or (_container.State.Status == 'exited'
          and _container_type == 'init'
          and _container.State.ExitCode == 0)
  retries: "{{ netdata_docker_wait_ready_retries }}"
  delay: "{{ netdata_docker_wait_ready_delay }}"
  loop: >-
    {{
      _containers.services.keys()
      | map('extract', _containers.services)
      | map('dict2items') | flatten
      | map(attribute='key') | list
    }}
  loop_control:
    label: |-
      {{ item }} {{ _container.State.Status }} ({{ _container.State.ExitCode }}) {{ _container_type }}
  vars:
    _container: "{{ _docker_container.container }}"
    _container_type: "{{ _container.Config.Labels['docker.container-type'] | default('default') }}"
    ansible_python_interpreter: "{{ netdata_docker_venv_dir }}/bin/python"
