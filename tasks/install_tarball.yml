---
- name: Install system packages
  ansible.builtin.include_tasks: system_packages.yml

- name: Download netdata with check (sha256)
  become: false
  run_once: true
  register: _netdata_tarball
  until: _netdata_tarball is succeeded
  retries: 5
  delay: 1
  ansible.builtin.uri:
    url: "{{ netdata_tarball_url }}"
    dest: "{{ playbook_dir }}/files/{{ netdata_tarball_url | basename }}"
    checksum: "{{ netdata_tarball_checksum }}"
    mode: 0644
  delegate_to: localhost

- name: Check that the netdata executable exists
  become: true
  ansible.builtin.stat:
    path: /opt/netdata/INSTALLED.VERSION
  register: netdata_installed_version

- name: Read /opt/netdata/INSTALLED.VERSION file
  ansible.builtin.slurp:
    src: /opt/netdata/INSTALLED.VERSION
  register: netdata_installed_version_string
  when: netdata_installed_version.stat.exists

- name: Download and install netdata
  become: true
  when: not netdata_installed_version.stat.exists
        or ((netdata_installed_version_string.content | default('') | b64decode) != netdata_tarball_release)
  block:
    - name: Create temporary file
      ansible.builtin.tempfile:
        state: file
        suffix: temp
      register: netdata_tmp

    - name: Copy netdata-installer from ansible controller
      no_log: true
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/{{ netdata_tarball_url | basename }}"
        dest: "{{ netdata_tmp.path }}"
        mode: 0644

    - name: Installing netdata
      changed_when: false
      ansible.builtin.command: sh "{{ netdata_tmp.path }}" --accept -- --dont-start-it

    - name: Save /opt/netdata/INSTALLED.VERSION file
      ansible.builtin.copy:
        content: "{{ netdata_tarball_release }}"
        dest: /opt/netdata/INSTALLED.VERSION
        mode: 0644

  always:
    - name: Remove temporary netdata file
      ansible.builtin.file:
        path: "{{ netdata_tmp.path }}"
        state: absent
